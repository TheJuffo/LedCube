   1               		.file	"music.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.text
  11               	.Ltext0:
  12               		.cfi_sections	.debug_frame
  13               	.global	music_bars
  15               	music_bars:
  16               	.LFB3:
  17               		.file 1 "music.c"
   1:music.c       **** //
   2:music.c       **** //  music.c
   3:music.c       **** //  Led Cube
   4:music.c       **** //
   5:music.c       **** //  Created by Johan Andersson on 2013-11-02.
   6:music.c       **** //  Copyright (c) 2013 Johan Andersson. All rights reserved.
   7:music.c       **** //
   8:music.c       **** 
   9:music.c       **** #include <stdio.h>
  10:music.c       **** #include "music.h"
  11:music.c       **** #include "draw.h"
  12:music.c       **** #include "effect.h"
  13:music.c       **** #include "debug.h"
  14:music.c       **** #include "util.h"
  15:music.c       **** #include <stdbool.h>
  16:music.c       **** 
  17:music.c       **** 
  18:music.c       **** void launch_music_effect(int effect)
  19:music.c       **** {
  20:music.c       ****     fill(0x00);
  21:music.c       ****     
  22:music.c       ****     switch(effect)
  23:music.c       ****     {
  24:music.c       ****         case 0:
  25:music.c       ****             send_debug_info(PSTR("Music bars\r\n"), 1);
  26:music.c       ****             music_bars();
  27:music.c       ****             break;
  28:music.c       ****         case 1:
  29:music.c       ****             send_debug_info(PSTR("Music ball\r\n"), 1);
  30:music.c       ****             music_ball();
  31:music.c       ****         default:
  32:music.c       ****             send_debug_info(PSTR("Music fail\r\n"), 1);
  33:music.c       **** 			effect_stringfly2(PSTR("MUSIC FAIL"), 1);
  34:music.c       **** 			break;
  35:music.c       ****             
  36:music.c       ****     }
  37:music.c       **** }
  38:music.c       **** 
  39:music.c       **** void music_bars()
  40:music.c       **** {
  18               		.loc 1 40 0
  19               		.cfi_startproc
  20 0000 6F92      		push r6
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 6, -2
  24 0002 7F92      		push r7
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 7, -3
  28 0004 8F92      		push r8
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 8, -4
  32 0006 9F92      		push r9
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 9, -5
  36 0008 AF92      		push r10
  37               	.LCFI4:
  38               		.cfi_def_cfa_offset 7
  39               		.cfi_offset 10, -6
  40 000a BF92      		push r11
  41               	.LCFI5:
  42               		.cfi_def_cfa_offset 8
  43               		.cfi_offset 11, -7
  44 000c CF92      		push r12
  45               	.LCFI6:
  46               		.cfi_def_cfa_offset 9
  47               		.cfi_offset 12, -8
  48 000e DF92      		push r13
  49               	.LCFI7:
  50               		.cfi_def_cfa_offset 10
  51               		.cfi_offset 13, -9
  52 0010 EF92      		push r14
  53               	.LCFI8:
  54               		.cfi_def_cfa_offset 11
  55               		.cfi_offset 14, -10
  56 0012 FF92      		push r15
  57               	.LCFI9:
  58               		.cfi_def_cfa_offset 12
  59               		.cfi_offset 15, -11
  60 0014 0F93      		push r16
  61               	.LCFI10:
  62               		.cfi_def_cfa_offset 13
  63               		.cfi_offset 16, -12
  64 0016 1F93      		push r17
  65               	.LCFI11:
  66               		.cfi_def_cfa_offset 14
  67               		.cfi_offset 17, -13
  68 0018 CF93      		push r28
  69               	.LCFI12:
  70               		.cfi_def_cfa_offset 15
  71               		.cfi_offset 28, -14
  72 001a DF93      		push r29
  73               	.LCFI13:
  74               		.cfi_def_cfa_offset 16
  75               		.cfi_offset 29, -15
  76 001c CDB7      		in r28,__SP_L__
  77 001e DEB7      		in r29,__SP_H__
  78 0020 6C97      		sbiw r28,28
  79               	.LCFI14:
  80               		.cfi_def_cfa 28, 44
  81 0022 0FB6      		in __tmp_reg__,__SREG__
  82 0024 F894      		cli
  83 0026 DEBF      		out __SP_H__,r29
  84 0028 0FBE      		out __SREG__,__tmp_reg__
  85 002a CDBF      		out __SP_L__,r28
  86               	/* prologue: function */
  87               	/* frame size = 28 */
  88               	/* stack size = 42 */
  89               	.L__stack_usage = 42
  41:music.c       ****     unsigned int eq_buffer[14];
  42:music.c       ****     int i;
  43:music.c       ****     
  44:music.c       ****     // Run this for 10 seconds
  45:music.c       ****     set_timer(10000);
  90               		.loc 1 45 0
  91 002c 80E1      		ldi r24,lo8(10000)
  92 002e 97E2      		ldi r25,hi8(10000)
  93 0030 0E94 0000 		call set_timer
  46:music.c       ****     
  47:music.c       ****     while(!timer_expired())
  48:music.c       ****     {
  49:music.c       ****         EQ_Read(eq_buffer);
  50:music.c       ****         fill(0x00);
  51:music.c       ****         // Basen l√§ngst bak
  52:music.c       ****         box_filled(7, 0, 0, 6, 3, (eq_buffer[0] / 128));
  94               		.loc 1 52 0
  95 0034 17E0      		ldi r17,lo8(7)
  96 0036 612E      		mov r6,r17
  97 0038 712C      		mov r7,__zero_reg__
  47:music.c       ****     while(!timer_expired())
  98               		.loc 1 47 0
  99 003a 00C0      		rjmp .L2
 100               	.L6:
  49:music.c       ****         EQ_Read(eq_buffer);
 101               		.loc 1 49 0
 102 003c CE01      		movw r24,r28
 103 003e 0196      		adiw r24,1
 104 0040 0E94 0000 		call EQ_Read
  50:music.c       ****         fill(0x00);
 105               		.loc 1 50 0
 106 0044 80E0      		ldi r24,lo8(0)
 107 0046 0E94 0000 		call fill
 108               		.loc 1 52 0
 109 004a E980      		ldd r14,Y+1
 110 004c FA80      		ldd r15,Y+2
 111 004e EE0C      		lsl r14
 112 0050 EF2C      		mov r14,r15
 113 0052 EE1C      		rol r14
 114 0054 FF08      		sbc r15,r15
 115 0056 F194      		neg r15
 116 0058 87E0      		ldi r24,lo8(7)
 117 005a 90E0      		ldi r25,hi8(7)
 118 005c 60E0      		ldi r22,lo8(0)
 119 005e 70E0      		ldi r23,hi8(0)
 120 0060 40E0      		ldi r20,lo8(0)
 121 0062 50E0      		ldi r21,hi8(0)
 122 0064 26E0      		ldi r18,lo8(6)
 123 0066 30E0      		ldi r19,hi8(6)
 124 0068 03E0      		ldi r16,lo8(3)
 125 006a 10E0      		ldi r17,hi8(3)
 126 006c 0E94 0000 		call box_filled
  53:music.c       ****         box_filled(7, 4, 0, 6, 7, (eq_buffer[7] / 128));
 127               		.loc 1 53 0
 128 0070 EF84      		ldd r14,Y+15
 129 0072 F888      		ldd r15,Y+16
 130 0074 EE0C      		lsl r14
 131 0076 EF2C      		mov r14,r15
 132 0078 EE1C      		rol r14
 133 007a FF08      		sbc r15,r15
 134 007c F194      		neg r15
 135 007e 87E0      		ldi r24,lo8(7)
 136 0080 90E0      		ldi r25,hi8(7)
 137 0082 64E0      		ldi r22,lo8(4)
 138 0084 70E0      		ldi r23,hi8(4)
 139 0086 40E0      		ldi r20,lo8(0)
 140 0088 50E0      		ldi r21,hi8(0)
 141 008a 26E0      		ldi r18,lo8(6)
 142 008c 30E0      		ldi r19,hi8(6)
 143 008e 07E0      		ldi r16,lo8(7)
 144 0090 10E0      		ldi r17,hi8(7)
 145 0092 0E94 0000 		call box_filled
 146               	.LVL0:
 147 0096 F3E0      		ldi r31,lo8(3)
 148 0098 AF2E      		mov r10,r31
 149 009a B12C      		mov r11,__zero_reg__
 150 009c AC0E      		add r10,r28
 151 009e BD1E      		adc r11,r29
 152 00a0 A5E0      		ldi r26,lo8(5)
 153 00a2 8A2E      		mov r8,r26
 154 00a4 912C      		mov r9,__zero_reg__
 155 00a6 B6E0      		ldi r27,lo8(6)
 156 00a8 CB2E      		mov r12,r27
 157 00aa D12C      		mov r13,__zero_reg__
 158               	.LVL1:
 159               	.L5:
  39:music.c       **** void music_bars()
 160               		.loc 1 39 0
 161 00ac C301      		movw r24,r6
 162 00ae 8C19      		sub r24,r12
 163 00b0 9D09      		sbc r25,r13
  54:music.c       ****         
  55:music.c       ****         for(i = 1; i < 7; i++)
  56:music.c       ****         {
  57:music.c       ****             if(i % 2 == 1)
  58:music.c       ****             {
  59:music.c       ****                 box_filled((7 - i), 0, 0, (6 - i), 1, (eq_buffer[i] / 128));
 164               		.loc 1 59 0
 165 00b2 F501      		movw r30,r10
 166 00b4 E080      		ld r14,Z
 167 00b6 F180      		ldd r15,Z+1
 168 00b8 EE0C      		lsl r14
 169 00ba EF2C      		mov r14,r15
 170 00bc EE1C      		rol r14
 171 00be FF08      		sbc r15,r15
 172 00c0 F194      		neg r15
  57:music.c       ****             if(i % 2 == 1)
 173               		.loc 1 57 0
 174 00c2 80FF      		sbrs r24,0
 175 00c4 00C0      		rjmp .L3
 176               		.loc 1 59 0
 177 00c6 C601      		movw r24,r12
 178 00c8 60E0      		ldi r22,lo8(0)
 179 00ca 70E0      		ldi r23,hi8(0)
 180 00cc 40E0      		ldi r20,lo8(0)
 181 00ce 50E0      		ldi r21,hi8(0)
 182 00d0 9401      		movw r18,r8
 183 00d2 01E0      		ldi r16,lo8(1)
 184 00d4 10E0      		ldi r17,hi8(1)
 185 00d6 0E94 0000 		call box_filled
  60:music.c       ****                 box_filled((7 - i), 6, 0, (6 - i), 7, (eq_buffer[i + 7] / 128));
 186               		.loc 1 60 0
 187 00da F501      		movw r30,r10
 188 00dc E684      		ldd r14,Z+14
 189 00de F784      		ldd r15,Z+15
 190 00e0 EE0C      		lsl r14
 191 00e2 EF2C      		mov r14,r15
 192 00e4 EE1C      		rol r14
 193 00e6 FF08      		sbc r15,r15
 194 00e8 F194      		neg r15
 195 00ea C601      		movw r24,r12
 196 00ec 66E0      		ldi r22,lo8(6)
 197 00ee 70E0      		ldi r23,hi8(6)
 198 00f0 40E0      		ldi r20,lo8(0)
 199 00f2 50E0      		ldi r21,hi8(0)
 200 00f4 9401      		movw r18,r8
 201 00f6 07E0      		ldi r16,lo8(7)
 202 00f8 10E0      		ldi r17,hi8(7)
 203 00fa 00C0      		rjmp .L8
 204               	.L3:
  61:music.c       ****             }
  62:music.c       ****             else
  63:music.c       ****             {
  64:music.c       ****                 box_filled((7 - i), 2, 0, (6 - i), 3, (eq_buffer[i] / 128));
 205               		.loc 1 64 0
 206 00fc C601      		movw r24,r12
 207 00fe 62E0      		ldi r22,lo8(2)
 208 0100 70E0      		ldi r23,hi8(2)
 209 0102 40E0      		ldi r20,lo8(0)
 210 0104 50E0      		ldi r21,hi8(0)
 211 0106 9401      		movw r18,r8
 212 0108 03E0      		ldi r16,lo8(3)
 213 010a 10E0      		ldi r17,hi8(3)
 214 010c 0E94 0000 		call box_filled
  65:music.c       ****                 box_filled((7 - i), 4, 0, (6 - i), 5, (eq_buffer[i + 7] / 128));
 215               		.loc 1 65 0
 216 0110 F501      		movw r30,r10
 217 0112 E684      		ldd r14,Z+14
 218 0114 F784      		ldd r15,Z+15
 219 0116 EE0C      		lsl r14
 220 0118 EF2C      		mov r14,r15
 221 011a EE1C      		rol r14
 222 011c FF08      		sbc r15,r15
 223 011e F194      		neg r15
 224 0120 C601      		movw r24,r12
 225 0122 64E0      		ldi r22,lo8(4)
 226 0124 70E0      		ldi r23,hi8(4)
 227 0126 40E0      		ldi r20,lo8(0)
 228 0128 50E0      		ldi r21,hi8(0)
 229 012a 9401      		movw r18,r8
 230 012c 05E0      		ldi r16,lo8(5)
 231 012e 10E0      		ldi r17,hi8(5)
 232               	.L8:
 233 0130 0E94 0000 		call box_filled
 234               	.LVL2:
 235 0134 0894      		sec
 236 0136 C108      		sbc r12,__zero_reg__
 237 0138 D108      		sbc r13,__zero_reg__
 238               	.LVL3:
 239 013a 0894      		sec
 240 013c 8108      		sbc r8,__zero_reg__
 241 013e 9108      		sbc r9,__zero_reg__
 242 0140 82E0      		ldi r24,lo8(2)
 243 0142 90E0      		ldi r25,hi8(2)
 244 0144 A80E      		add r10,r24
 245 0146 B91E      		adc r11,r25
  55:music.c       ****         for(i = 1; i < 7; i++)
 246               		.loc 1 55 0
 247 0148 C114      		cp r12,__zero_reg__
 248 014a D104      		cpc r13,__zero_reg__
 249 014c 01F0      		breq .+2
 250 014e 00C0      		rjmp .L5
 251               	.LVL4:
 252               	.L2:
  47:music.c       ****     while(!timer_expired())
 253               		.loc 1 47 0 discriminator 1
 254 0150 0E94 0000 		call timer_expired
 255 0154 8823      		tst r24
 256 0156 01F4      		brne .+2
 257 0158 00C0      		rjmp .L6
 258               	/* epilogue start */
  66:music.c       **** 
  67:music.c       ****             }
  68:music.c       ****         }
  69:music.c       ****     }
  70:music.c       **** }
 259               		.loc 1 70 0
 260 015a 6C96      		adiw r28,28
 261 015c 0FB6      		in __tmp_reg__,__SREG__
 262 015e F894      		cli
 263 0160 DEBF      		out __SP_H__,r29
 264 0162 0FBE      		out __SREG__,__tmp_reg__
 265 0164 CDBF      		out __SP_L__,r28
 266 0166 DF91      		pop r29
 267 0168 CF91      		pop r28
 268 016a 1F91      		pop r17
 269 016c 0F91      		pop r16
 270 016e FF90      		pop r15
 271 0170 EF90      		pop r14
 272 0172 DF90      		pop r13
 273 0174 CF90      		pop r12
 274 0176 BF90      		pop r11
 275 0178 AF90      		pop r10
 276 017a 9F90      		pop r9
 277 017c 8F90      		pop r8
 278 017e 7F90      		pop r7
 279 0180 6F90      		pop r6
 280 0182 0895      		ret
 281               		.cfi_endproc
 282               	.LFE3:
 284               	.global	music_ball
 286               	music_ball:
 287               	.LFB4:
  71:music.c       **** 
  72:music.c       **** void music_ball()
  73:music.c       **** {
 288               		.loc 1 73 0
 289               		.cfi_startproc
 290               	/* prologue: function */
 291               	/* frame size = 0 */
 292               	/* stack size = 0 */
 293               	.L__stack_usage = 0
  74:music.c       ****     unsigned int eq_buffer[14];
  75:music.c       ****     int i;
  76:music.c       ****     
  77:music.c       ****     set_timer(10000);
 294               		.loc 1 77 0
 295 0184 80E1      		ldi r24,lo8(10000)
 296 0186 97E2      		ldi r25,hi8(10000)
 297 0188 0E94 0000 		call set_timer
 298               	/* epilogue start */
  78:music.c       ****     
  79:music.c       ****     while(!timer_expired)
  80:music.c       ****     {
  81:music.c       ****         EQ_Read(eq_buffer);
  82:music.c       ****         fill(0x00);
  83:music.c       ****         
  84:music.c       ****         
  85:music.c       ****     }
  86:music.c       **** }
 299               		.loc 1 86 0
 300 018c 0895      		ret
 301               		.cfi_endproc
 302               	.LFE4:
 304               	.global	launch_music_effect
 306               	launch_music_effect:
 307               	.LFB2:
  19:music.c       **** {
 308               		.loc 1 19 0
 309               		.cfi_startproc
 310               	.LVL5:
 311 018e CF93      		push r28
 312               	.LCFI15:
 313               		.cfi_def_cfa_offset 3
 314               		.cfi_offset 28, -2
 315 0190 DF93      		push r29
 316               	.LCFI16:
 317               		.cfi_def_cfa_offset 4
 318               		.cfi_offset 29, -3
 319               	/* prologue: function */
 320               	/* frame size = 0 */
 321               	/* stack size = 2 */
 322               	.L__stack_usage = 2
 323 0192 EC01      		movw r28,r24
  20:music.c       ****     fill(0x00);
 324               		.loc 1 20 0
 325 0194 80E0      		ldi r24,lo8(0)
 326               	.LVL6:
 327 0196 0E94 0000 		call fill
  22:music.c       ****     switch(effect)
 328               		.loc 1 22 0
 329 019a 2097      		sbiw r28,0
 330 019c 01F0      		breq .L12
 331 019e C130      		cpi r28,1
 332 01a0 D105      		cpc r29,__zero_reg__
 333 01a2 01F4      		brne .L11
 334 01a4 00C0      		rjmp .L15
 335               	.L12:
  25:music.c       ****             send_debug_info(PSTR("Music bars\r\n"), 1);
 336               		.loc 1 25 0
 337 01a6 80E0      		ldi r24,lo8(__c.1943)
 338 01a8 90E0      		ldi r25,hi8(__c.1943)
 339 01aa 61E0      		ldi r22,lo8(1)
 340 01ac 0E94 0000 		call send_debug_info
  26:music.c       ****             music_bars();
 341               		.loc 1 26 0
 342 01b0 0E94 0000 		call music_bars
  27:music.c       ****             break;
 343               		.loc 1 27 0
 344 01b4 00C0      		rjmp .L10
 345               	.L15:
  29:music.c       ****             send_debug_info(PSTR("Music ball\r\n"), 1);
 346               		.loc 1 29 0
 347 01b6 80E0      		ldi r24,lo8(__c.1947)
 348 01b8 90E0      		ldi r25,hi8(__c.1947)
 349 01ba 61E0      		ldi r22,lo8(1)
 350 01bc 0E94 0000 		call send_debug_info
  30:music.c       ****             music_ball();
 351               		.loc 1 30 0
 352 01c0 0E94 0000 		call music_ball
 353               	.L11:
  32:music.c       ****             send_debug_info(PSTR("Music fail\r\n"), 1);
 354               		.loc 1 32 0
 355 01c4 80E0      		ldi r24,lo8(__c.1950)
 356 01c6 90E0      		ldi r25,hi8(__c.1950)
 357 01c8 61E0      		ldi r22,lo8(1)
 358 01ca 0E94 0000 		call send_debug_info
  33:music.c       **** 			effect_stringfly2(PSTR("MUSIC FAIL"), 1);
 359               		.loc 1 33 0
 360 01ce 80E0      		ldi r24,lo8(__c.1952)
 361 01d0 90E0      		ldi r25,hi8(__c.1952)
 362 01d2 61E0      		ldi r22,lo8(1)
 363 01d4 0E94 0000 		call effect_stringfly2
 364               	.L10:
 365               	/* epilogue start */
  37:music.c       **** }
 366               		.loc 1 37 0
 367 01d8 DF91      		pop r29
 368 01da CF91      		pop r28
 369               	.LVL7:
 370 01dc 0895      		ret
 371               		.cfi_endproc
 372               	.LFE2:
 374               		.comm fb,64,1
 375               		.comm cube,64,1
 376               		.section	.progmem.data,"a",@progbits
 379               	__c.1943:
 380 0000 4D75 7369 		.string	"Music bars\r\n"
 380      6320 6261 
 380      7273 0D0A 
 380      00
 383               	__c.1947:
 384 000d 4D75 7369 		.string	"Music ball\r\n"
 384      6320 6261 
 384      6C6C 0D0A 
 384      00
 387               	__c.1950:
 388 001a 4D75 7369 		.string	"Music fail\r\n"
 388      6320 6661 
 388      696C 0D0A 
 388      00
 391               	__c.1952:
 392 0027 4D55 5349 		.string	"MUSIC FAIL"
 392      4320 4641 
 392      494C 00
 393               		.text
 394               	.Letext0:
 395               		.file 2 "cube.h"
DEFINED SYMBOLS
                            *ABS*:00000000 music.c
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:2      *ABS*:0000003f __SREG__
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:3      *ABS*:0000003e __SP_H__
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:4      *ABS*:0000003d __SP_L__
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:5      *ABS*:00000034 __CCP__
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:6      *ABS*:00000000 __tmp_reg__
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:7      *ABS*:00000001 __zero_reg__
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:15     .text:00000000 music_bars
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:286    .text:00000184 music_ball
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:306    .text:0000018e launch_music_effect
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:379    .progmem.data:00000000 __c.1943
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:383    .progmem.data:0000000d __c.1947
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:387    .progmem.data:0000001a __c.1950
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccySn08P.s:391    .progmem.data:00000027 __c.1952
                            *COM*:00000040 fb
                            *COM*:00000040 cube

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
set_timer
EQ_Read
fill
box_filled
timer_expired
send_debug_info
effect_stringfly2
