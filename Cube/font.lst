   1               		.file	"font.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.text
  11               	.Ltext0:
  12               		.cfi_sections	.debug_frame
  13               	.global	font_getpath
  15               	font_getpath:
  16               	.LFB1:
  17               		.file 1 "font.c"
   1:font.c        **** #include "font.h"
   2:font.c        **** #include <avr/eeprom.h>
   3:font.c        **** 
   4:font.c        **** volatile const unsigned char font[455] EEMEM = {
   5:font.c        **** 	0x00,0x00,0x00,0x00,0x00,0x00,0x5f,0x5f,0x00,0x00,	//  !
   6:font.c        **** 	0x00,0x03,0x00,0x03,0x00,0x14,0x7f,0x14,0x7f,0x14,	// "#
   7:font.c        **** 	0x24,0x2a,0x7f,0x2a,0x12,0x23,0x13,0x08,0x64,0x62,	// $%
   8:font.c        **** 	0x36,0x49,0x55,0x22,0x50,0x00,0x05,0x03,0x00,0x00,	// &'
   9:font.c        **** 	0x00,0x1c,0x22,0x41,0x00,0x00,0x41,0x22,0x1c,0x00,	// ()
  10:font.c        **** 	0x14,0x08,0x3e,0x08,0x14,0x08,0x08,0x3e,0x08,0x08,	// *+
  11:font.c        **** 	0x00,0x50,0x30,0x00,0x00,0x08,0x08,0x08,0x08,0x08,	// ,-
  12:font.c        **** 	0x00,0x60,0x60,0x00,0x00,0x20,0x10,0x08,0x04,0x02,	// ./
  13:font.c        **** 	0x3e,0x51,0x49,0x45,0x3e,0x00,0x42,0x7f,0x40,0x00,	// 01
  14:font.c        **** 	0x42,0x61,0x51,0x49,0x46,0x21,0x41,0x45,0x4b,0x31,	// 23
  15:font.c        **** 	0x18,0x14,0x12,0x7f,0x10,0x27,0x45,0x45,0x45,0x39,	// 45
  16:font.c        **** 	0x3c,0x4a,0x49,0x49,0x30,0x01,0x71,0x09,0x05,0x03,	// 67
  17:font.c        **** 	0x36,0x49,0x49,0x49,0x36,0x06,0x49,0x49,0x29,0x1e,	// 89
  18:font.c        **** 	0x00,0x36,0x36,0x00,0x00,0x00,0x56,0x36,0x00,0x00,	// :;
  19:font.c        **** 	0x08,0x14,0x22,0x41,0x00,0x14,0x14,0x14,0x14,0x14,	// <=
  20:font.c        **** 	0x00,0x41,0x22,0x14,0x08,0x02,0x01,0x51,0x09,0x06,	// >?
  21:font.c        **** 	0x32,0x49,0x79,0x41,0x3e,0x7e,0x11,0x11,0x11,0x7e,	// @A
  22:font.c        **** 	0x7f,0x49,0x49,0x49,0x36,0x3e,0x41,0x41,0x41,0x22,	// BC
  23:font.c        **** 	0x7f,0x41,0x41,0x22,0x1c,0x7f,0x49,0x49,0x49,0x41,	// DE
  24:font.c        **** 	0x7f,0x09,0x09,0x09,0x01,0x3e,0x41,0x49,0x49,0x7a,	// FG
  25:font.c        **** 	0x7f,0x08,0x08,0x08,0x7f,0x00,0x41,0x7f,0x41,0x00,	// HI
  26:font.c        **** 	0x20,0x40,0x41,0x3f,0x01,0x7f,0x08,0x14,0x22,0x41,	// JK
  27:font.c        **** 	0x7f,0x40,0x40,0x40,0x40,0x7f,0x02,0x0c,0x02,0x7f,	// LM
  28:font.c        **** 	0x7f,0x04,0x08,0x10,0x7f,0x3e,0x41,0x41,0x41,0x3e,	// NO
  29:font.c        **** 	0x7f,0x09,0x09,0x09,0x06,0x3e,0x41,0x51,0x21,0x5e,	// PQ
  30:font.c        **** 	0x7f,0x09,0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31,	// RS
  31:font.c        **** 	0x01,0x01,0x7f,0x01,0x01,0x3f,0x40,0x40,0x40,0x3f,	// TU
  32:font.c        **** 	0x1f,0x20,0x40,0x20,0x1f,0x3f,0x40,0x38,0x40,0x3f,	// VW
  33:font.c        **** 	0x63,0x14,0x08,0x14,0x63,0x07,0x08,0x70,0x08,0x07,	// XY
  34:font.c        **** 	0x61,0x51,0x49,0x45,0x43,0x00,0x7f,0x41,0x41,0x00,	// Z[
  35:font.c        **** 	0x02,0x04,0x08,0x10,0x20,0x00,0x41,0x41,0x7f,0x00,	// \]
  36:font.c        **** 	0x04,0x02,0x01,0x02,0x04,0x40,0x40,0x40,0x40,0x40,	// ^_
  37:font.c        **** 	0x00,0x01,0x02,0x04,0x00,0x20,0x54,0x54,0x54,0x78,	// `a
  38:font.c        **** 	0x7f,0x48,0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20,	// bc
  39:font.c        **** 	0x38,0x44,0x44,0x48,0x7f,0x38,0x54,0x54,0x54,0x18,	// de
  40:font.c        **** 	0x08,0x7e,0x09,0x01,0x02,0x0c,0x52,0x52,0x52,0x3e,	// fg
  41:font.c        **** 	0x7f,0x08,0x04,0x04,0x78,0x00,0x44,0x7d,0x40,0x00,	// hi
  42:font.c        **** 	0x20,0x40,0x44,0x3d,0x00,0x7f,0x10,0x28,0x44,0x00,	// jk
  43:font.c        **** 	0x00,0x41,0x7f,0x40,0x00,0x7c,0x04,0x18,0x04,0x78,	// lm
  44:font.c        **** 	0x7c,0x08,0x04,0x04,0x78,0x38,0x44,0x44,0x44,0x38,	// no
  45:font.c        **** 	0x7c,0x14,0x14,0x14,0x08,0x08,0x14,0x14,0x18,0x7c,	// pq
  46:font.c        **** 	0x7c,0x08,0x04,0x04,0x08,0x48,0x54,0x54,0x54,0x20,	// rs
  47:font.c        **** 	0x04,0x3f,0x44,0x40,0x20,0x3c,0x40,0x40,0x20,0x7c,	// tu
  48:font.c        **** 	0x1c,0x20,0x40,0x20,0x1c,0x3c,0x40,0x30,0x40,0x3c,	// vw
  49:font.c        **** 	0x44,0x28,0x10,0x28,0x44,0x0c,0x50,0x50,0x50,0x3c,	// xy
  50:font.c        **** 	0x44,0x64,0x54,0x4c,0x44				// z
  51:font.c        **** };
  52:font.c        **** 
  53:font.c        **** 
  54:font.c        **** volatile const unsigned char bitmaps[6][8] EEMEM = {
  55:font.c        **** 	{0xc3,0xc3,0x00,0x18,0x18,0x81,0xff,0x7e}, // smiley 3 small
  56:font.c        **** 	{0x3c,0x42,0x81,0x81,0xc3,0x24,0xa5,0xe7}, // Omega
  57:font.c        **** 	{0x00,0x04,0x06,0xff,0xff,0x06,0x04,0x00},  // Arrow
  58:font.c        **** 	{0x81,0x42,0x24,0x18,0x18,0x24,0x42,0x81}, // X
  59:font.c        **** 	{0xBD,0xA1,0xA1,0xB9,0xA1,0xA1,0xA1,0x00}, // ifi
  60:font.c        **** 	{0xEF,0x48,0x4B,0x49,0x4F,0x00,0x00,0x00} // TG
  61:font.c        **** };
  62:font.c        **** 
  63:font.c        **** const unsigned char paths[44] PROGMEM = {0x07,0x06,0x05,0x04,0x03,0x02,0x01,0x00,0x10,0x20,0x30,0x4
  64:font.c        **** 0x04,0x03,0x12,0x21,0x30,0x40,0x51,0x62,0x73,0x74,0x65,0x56,0x47,0x37,0x26,0x15}; // circle, len 16
  65:font.c        **** 
  66:font.c        **** void font_getpath (unsigned char path, unsigned char *destination, int length)
  67:font.c        **** {
  18               		.loc 1 67 0
  19               		.cfi_startproc
  20               	.LVL0:
  21               	/* prologue: function */
  22               	/* frame size = 0 */
  23               	/* stack size = 0 */
  24               	.L__stack_usage = 0
  68:font.c        **** 	int i;
  69:font.c        **** 	int offset = 0;
  70:font.c        **** 	
  71:font.c        **** 	if (path == 1)
  25               		.loc 1 71 0
  26 0000 8130      		cpi r24,lo8(1)
  27 0002 01F0      		breq .L5
  69:font.c        **** 	int offset = 0;
  28               		.loc 1 69 0
  29 0004 20E0      		ldi r18,lo8(0)
  30 0006 30E0      		ldi r19,hi8(0)
  31 0008 00C0      		rjmp .L2
  32               	.L5:
  72:font.c        **** 		offset=28;
  33               		.loc 1 72 0
  34 000a 2CE1      		ldi r18,lo8(28)
  35 000c 30E0      		ldi r19,hi8(28)
  36               	.L2:
  37               	.LVL1:
  71:font.c        **** 	if (path == 1)
  38               		.loc 1 71 0
  39 000e DB01      		movw r26,r22
  73:font.c        **** 	
  74:font.c        **** 	for (i = 0; i < length; i++)
  40               		.loc 1 74 0
  41 0010 80E0      		ldi r24,lo8(0)
  42 0012 90E0      		ldi r25,hi8(0)
  43               	.LVL2:
  44 0014 00C0      		rjmp .L3
  45               	.LVL3:
  46               	.L4:
  47               	.LBB2:
  66:font.c        **** void font_getpath (unsigned char path, unsigned char *destination, int length)
  48               		.loc 1 66 0 discriminator 2
  49 0016 FC01      		movw r30,r24
  50 0018 E20F      		add r30,r18
  51 001a F31F      		adc r31,r19
  75:font.c        **** 		destination[i] = pgm_read_byte(&paths[i+offset]);
  52               		.loc 1 75 0 discriminator 2
  53 001c E050      		subi r30,lo8(-(paths))
  54 001e F040      		sbci r31,hi8(-(paths))
  55               	/* #APP */
  56               	 ;  75 "font.c" 1
  57 0020 E491      		lpm r30, Z
  58               		
  59               	 ;  0 "" 2
  60               	.LVL4:
  61               	/* #NOAPP */
  62               	.LBE2:
  63 0022 ED93      		st X+,r30
  74:font.c        **** 	for (i = 0; i < length; i++)
  64               		.loc 1 74 0 discriminator 2
  65 0024 0196      		adiw r24,1
  66               	.LVL5:
  67               	.L3:
  74:font.c        **** 	for (i = 0; i < length; i++)
  68               		.loc 1 74 0 is_stmt 0 discriminator 1
  69 0026 8417      		cp r24,r20
  70 0028 9507      		cpc r25,r21
  71 002a 04F0      		brlt .L4
  72               	/* epilogue start */
  76:font.c        **** }
  73               		.loc 1 76 0 is_stmt 1
  74 002c 0895      		ret
  75               		.cfi_endproc
  76               	.LFE1:
  78               	.global	font_getchar
  80               	font_getchar:
  81               	.LFB2:
  77:font.c        **** 
  78:font.c        **** void font_getchar (char chr, unsigned char dst[5])
  79:font.c        **** {
  82               		.loc 1 79 0
  83               		.cfi_startproc
  84               	.LVL6:
  85 002e EF92      		push r14
  86               	.LCFI0:
  87               		.cfi_def_cfa_offset 3
  88               		.cfi_offset 14, -2
  89 0030 FF92      		push r15
  90               	.LCFI1:
  91               		.cfi_def_cfa_offset 4
  92               		.cfi_offset 15, -3
  93 0032 0F93      		push r16
  94               	.LCFI2:
  95               		.cfi_def_cfa_offset 5
  96               		.cfi_offset 16, -4
  97 0034 1F93      		push r17
  98               	.LCFI3:
  99               		.cfi_def_cfa_offset 6
 100               		.cfi_offset 17, -5
 101 0036 CF93      		push r28
 102               	.LCFI4:
 103               		.cfi_def_cfa_offset 7
 104               		.cfi_offset 28, -6
 105 0038 DF93      		push r29
 106               	.LCFI5:
 107               		.cfi_def_cfa_offset 8
 108               		.cfi_offset 29, -7
 109 003a 0F92      		push __tmp_reg__
 110               	.LCFI6:
 111               		.cfi_def_cfa_offset 9
 112 003c CDB7      		in r28,__SP_L__
 113 003e DEB7      		in r29,__SP_H__
 114               	.LCFI7:
 115               		.cfi_def_cfa_register 28
 116               	/* prologue: function */
 117               	/* frame size = 1 */
 118               	/* stack size = 7 */
 119               	.L__stack_usage = 7
  80:font.c        **** 	uint8_t i;
  81:font.c        **** 	chr -= 32; // our bitmap font starts at ascii char 32.
 120               		.loc 1 81 0
 121 0040 8052      		subi r24,lo8(-(-32))
 122               	.LVL7:
  82:font.c        **** 	
  83:font.c        ****     for (i = 0; i < 5; i++)
  84:font.c        **** 		dst[i] = (unsigned char)eeprom_read_byte((uint8_t*)&font[(chr*5)+i]);
 123               		.loc 1 84 0
 124 0042 90E0      		ldi r25,lo8(0)
 125 0044 7C01      		movw r14,r24
 126 0046 EE0C      		lsl r14
 127 0048 FF1C      		rol r15
 128 004a EE0C      		lsl r14
 129 004c FF1C      		rol r15
 130 004e E80E      		add r14,r24
 131 0050 F91E      		adc r15,r25
 132 0052 8B01      		movw r16,r22
  83:font.c        ****     for (i = 0; i < 5; i++)
 133               		.loc 1 83 0
 134 0054 20E0      		ldi r18,lo8(0)
 135               	.LVL8:
 136               	.L7:
 137               		.loc 1 84 0 discriminator 2
 138 0056 C701      		movw r24,r14
 139 0058 8050      		subi r24,lo8(-(font))
 140 005a 9040      		sbci r25,hi8(-(font))
 141 005c 2983      		std Y+1,r18
 142 005e 0E94 0000 		call __eerd_byte_m32
 143 0062 F801      		movw r30,r16
 144 0064 8193      		st Z+,r24
 145 0066 8F01      		movw r16,r30
  83:font.c        ****     for (i = 0; i < 5; i++)
 146               		.loc 1 83 0 discriminator 2
 147 0068 2981      		ldd r18,Y+1
 148 006a 2F5F      		subi r18,lo8(-(1))
 149               	.LVL9:
 150 006c 0894      		sec
 151 006e E11C      		adc r14,__zero_reg__
 152 0070 F11C      		adc r15,__zero_reg__
 153 0072 2530      		cpi r18,lo8(5)
 154 0074 01F4      		brne .L7
 155               	/* epilogue start */
  85:font.c        **** }
 156               		.loc 1 85 0
 157 0076 0F90      		pop __tmp_reg__
 158 0078 DF91      		pop r29
 159 007a CF91      		pop r28
 160 007c 1F91      		pop r17
 161 007e 0F91      		pop r16
 162 0080 FF90      		pop r15
 163 0082 EF90      		pop r14
 164 0084 0895      		ret
 165               		.cfi_endproc
 166               	.LFE2:
 168               	.global	font_getbitmap
 170               	font_getbitmap:
 171               	.LFB3:
  86:font.c        **** 
  87:font.c        **** void font_getbitmap (char bitmap, unsigned char dst[8])
  88:font.c        **** {
 172               		.loc 1 88 0
 173               		.cfi_startproc
 174               	.LVL10:
 175 0086 EF92      		push r14
 176               	.LCFI8:
 177               		.cfi_def_cfa_offset 3
 178               		.cfi_offset 14, -2
 179 0088 FF92      		push r15
 180               	.LCFI9:
 181               		.cfi_def_cfa_offset 4
 182               		.cfi_offset 15, -3
 183 008a 0F93      		push r16
 184               	.LCFI10:
 185               		.cfi_def_cfa_offset 5
 186               		.cfi_offset 16, -4
 187 008c 1F93      		push r17
 188               	.LCFI11:
 189               		.cfi_def_cfa_offset 6
 190               		.cfi_offset 17, -5
 191 008e CF93      		push r28
 192               	.LCFI12:
 193               		.cfi_def_cfa_offset 7
 194               		.cfi_offset 28, -6
 195 0090 DF93      		push r29
 196               	.LCFI13:
 197               		.cfi_def_cfa_offset 8
 198               		.cfi_offset 29, -7
 199               	/* prologue: function */
 200               	/* frame size = 0 */
 201               	/* stack size = 6 */
 202               	.L__stack_usage = 6
 203               	.LVL11:
  89:font.c        **** 	int i;
  90:font.c        **** 	
  91:font.c        ****     for (i = 0; i < 8; i++)
  92:font.c        **** 		dst[i] = (unsigned char)eeprom_read_byte((uint8_t*)&bitmaps[(uint8_t)bitmap][(uint8_t)i]);
 204               		.loc 1 92 0
 205 0092 C82F      		mov r28,r24
 206 0094 D0E0      		ldi r29,lo8(0)
 207 0096 33E0      		ldi r19,3
 208 0098 CC0F      	1:	lsl r28
 209 009a DD1F      		rol r29
 210 009c 3A95      		dec r19
 211 009e 01F4      		brne 1b
 212 00a0 7B01      		movw r14,r22
  91:font.c        ****     for (i = 0; i < 8; i++)
 213               		.loc 1 91 0
 214 00a2 00E0      		ldi r16,lo8(0)
 215 00a4 10E0      		ldi r17,hi8(0)
  87:font.c        **** void font_getbitmap (char bitmap, unsigned char dst[8])
 216               		.loc 1 87 0
 217 00a6 C050      		subi r28,lo8(-(bitmaps))
 218 00a8 D040      		sbci r29,hi8(-(bitmaps))
 219               	.LVL12:
 220               	.L10:
 221               		.loc 1 92 0 discriminator 2
 222 00aa CE01      		movw r24,r28
 223 00ac 800F      		add r24,r16
 224 00ae 911F      		adc r25,r17
 225 00b0 0E94 0000 		call __eerd_byte_m32
 226 00b4 F701      		movw r30,r14
 227 00b6 8193      		st Z+,r24
 228 00b8 7F01      		movw r14,r30
  91:font.c        ****     for (i = 0; i < 8; i++)
 229               		.loc 1 91 0 discriminator 2
 230 00ba 0F5F      		subi r16,lo8(-(1))
 231 00bc 1F4F      		sbci r17,hi8(-(1))
 232               	.LVL13:
 233 00be 0830      		cpi r16,8
 234 00c0 1105      		cpc r17,__zero_reg__
 235 00c2 01F4      		brne .L10
 236               	/* epilogue start */
  93:font.c        **** 	
  94:font.c        **** }
 237               		.loc 1 94 0
 238 00c4 DF91      		pop r29
 239 00c6 CF91      		pop r28
 240 00c8 1F91      		pop r17
 241 00ca 0F91      		pop r16
 242               	.LVL14:
 243 00cc FF90      		pop r15
 244 00ce EF90      		pop r14
 245 00d0 0895      		ret
 246               		.cfi_endproc
 247               	.LFE3:
 249               	.global	font_getbitmappixel
 251               	font_getbitmappixel:
 252               	.LFB4:
  95:font.c        **** 
  96:font.c        **** unsigned char font_getbitmappixel ( char bitmap, char x, char y)
  97:font.c        **** {
 253               		.loc 1 97 0
 254               		.cfi_startproc
 255               	.LVL15:
 256 00d2 CF93      		push r28
 257               	.LCFI14:
 258               		.cfi_def_cfa_offset 3
 259               		.cfi_offset 28, -2
 260 00d4 DF93      		push r29
 261               	.LCFI15:
 262               		.cfi_def_cfa_offset 4
 263               		.cfi_offset 29, -3
 264 00d6 0F92      		push __tmp_reg__
 265               	.LCFI16:
 266               		.cfi_def_cfa_offset 5
 267 00d8 CDB7      		in r28,__SP_L__
 268 00da DEB7      		in r29,__SP_H__
 269               	.LCFI17:
 270               		.cfi_def_cfa_register 28
 271               	/* prologue: function */
 272               	/* frame size = 1 */
 273               	/* stack size = 3 */
 274               	.L__stack_usage = 3
  98:font.c        **** 	uint8_t tmp = eeprom_read_byte((uint8_t*)&bitmaps[(uint8_t)bitmap][(uint8_t)x]);
 275               		.loc 1 98 0
 276 00dc 90E0      		ldi r25,lo8(0)
 277 00de 53E0      		ldi r21,3
 278 00e0 880F      	1:	lsl r24
 279 00e2 991F      		rol r25
 280 00e4 5A95      		dec r21
 281 00e6 01F4      		brne 1b
 282               	.LVL16:
 283 00e8 860F      		add r24,r22
 284 00ea 911D      		adc r25,__zero_reg__
 285 00ec 8050      		subi r24,lo8(-(bitmaps))
 286 00ee 9040      		sbci r25,hi8(-(bitmaps))
 287 00f0 4983      		std Y+1,r20
 288 00f2 0E94 0000 		call __eerd_byte_m32
 289               	.LVL17:
  99:font.c        **** 	return (tmp >> y) & 0x01;
 290               		.loc 1 99 0
 291 00f6 90E0      		ldi r25,lo8(0)
 292 00f8 4981      		ldd r20,Y+1
 293               	.LVL18:
 294 00fa 00C0      		rjmp 2f
 295 00fc 9595      	1:	asr r25
 296 00fe 8795      		ror r24
 297 0100 4A95      	2:	dec r20
 298 0102 02F4      		brpl 1b
 299               	.LVL19:
 100:font.c        **** }
 300               		.loc 1 100 0
 301 0104 8170      		andi r24,lo8(1)
 302               	/* epilogue start */
 303 0106 0F90      		pop __tmp_reg__
 304 0108 DF91      		pop r29
 305 010a CF91      		pop r28
 306 010c 0895      		ret
 307               		.cfi_endproc
 308               	.LFE4:
 310               	.global	paths
 311               		.section	.progmem.data,"a",@progbits
 314               	paths:
 315 0000 07        		.byte	7
 316 0001 06        		.byte	6
 317 0002 05        		.byte	5
 318 0003 04        		.byte	4
 319 0004 03        		.byte	3
 320 0005 02        		.byte	2
 321 0006 01        		.byte	1
 322 0007 00        		.byte	0
 323 0008 10        		.byte	16
 324 0009 20        		.byte	32
 325 000a 30        		.byte	48
 326 000b 40        		.byte	64
 327 000c 50        		.byte	80
 328 000d 60        		.byte	96
 329 000e 70        		.byte	112
 330 000f 71        		.byte	113
 331 0010 72        		.byte	114
 332 0011 73        		.byte	115
 333 0012 74        		.byte	116
 334 0013 75        		.byte	117
 335 0014 76        		.byte	118
 336 0015 77        		.byte	119
 337 0016 67        		.byte	103
 338 0017 57        		.byte	87
 339 0018 47        		.byte	71
 340 0019 37        		.byte	55
 341 001a 27        		.byte	39
 342 001b 17        		.byte	23
 343 001c 04        		.byte	4
 344 001d 03        		.byte	3
 345 001e 12        		.byte	18
 346 001f 21        		.byte	33
 347 0020 30        		.byte	48
 348 0021 40        		.byte	64
 349 0022 51        		.byte	81
 350 0023 62        		.byte	98
 351 0024 73        		.byte	115
 352 0025 74        		.byte	116
 353 0026 65        		.byte	101
 354 0027 56        		.byte	86
 355 0028 47        		.byte	71
 356 0029 37        		.byte	55
 357 002a 26        		.byte	38
 358 002b 15        		.byte	21
 359               	.global	bitmaps
 360               		.section	.eeprom,"aw",@progbits
 363               	bitmaps:
 364 0000 C3        		.byte	-61
 365 0001 C3        		.byte	-61
 366 0002 00        		.byte	0
 367 0003 18        		.byte	24
 368 0004 18        		.byte	24
 369 0005 81        		.byte	-127
 370 0006 FF        		.byte	-1
 371 0007 7E        		.byte	126
 372 0008 3C        		.byte	60
 373 0009 42        		.byte	66
 374 000a 81        		.byte	-127
 375 000b 81        		.byte	-127
 376 000c C3        		.byte	-61
 377 000d 24        		.byte	36
 378 000e A5        		.byte	-91
 379 000f E7        		.byte	-25
 380 0010 00        		.byte	0
 381 0011 04        		.byte	4
 382 0012 06        		.byte	6
 383 0013 FF        		.byte	-1
 384 0014 FF        		.byte	-1
 385 0015 06        		.byte	6
 386 0016 04        		.byte	4
 387 0017 00        		.byte	0
 388 0018 81        		.byte	-127
 389 0019 42        		.byte	66
 390 001a 24        		.byte	36
 391 001b 18        		.byte	24
 392 001c 18        		.byte	24
 393 001d 24        		.byte	36
 394 001e 42        		.byte	66
 395 001f 81        		.byte	-127
 396 0020 BD        		.byte	-67
 397 0021 A1        		.byte	-95
 398 0022 A1        		.byte	-95
 399 0023 B9        		.byte	-71
 400 0024 A1        		.byte	-95
 401 0025 A1        		.byte	-95
 402 0026 A1        		.byte	-95
 403 0027 00        		.byte	0
 404 0028 EF        		.byte	-17
 405 0029 48        		.byte	72
 406 002a 4B        		.byte	75
 407 002b 49        		.byte	73
 408 002c 4F        		.byte	79
 409 002d 00        		.byte	0
 410 002e 00        		.byte	0
 411 002f 00        		.byte	0
 412               	.global	font
 415               	font:
 416 0030 00        		.byte	0
 417 0031 00        		.byte	0
 418 0032 00        		.byte	0
 419 0033 00        		.byte	0
 420 0034 00        		.byte	0
 421 0035 00        		.byte	0
 422 0036 5F        		.byte	95
 423 0037 5F        		.byte	95
 424 0038 00        		.byte	0
 425 0039 00        		.byte	0
 426 003a 00        		.byte	0
 427 003b 03        		.byte	3
 428 003c 00        		.byte	0
 429 003d 03        		.byte	3
 430 003e 00        		.byte	0
 431 003f 14        		.byte	20
 432 0040 7F        		.byte	127
 433 0041 14        		.byte	20
 434 0042 7F        		.byte	127
 435 0043 14        		.byte	20
 436 0044 24        		.byte	36
 437 0045 2A        		.byte	42
 438 0046 7F        		.byte	127
 439 0047 2A        		.byte	42
 440 0048 12        		.byte	18
 441 0049 23        		.byte	35
 442 004a 13        		.byte	19
 443 004b 08        		.byte	8
 444 004c 64        		.byte	100
 445 004d 62        		.byte	98
 446 004e 36        		.byte	54
 447 004f 49        		.byte	73
 448 0050 55        		.byte	85
 449 0051 22        		.byte	34
 450 0052 50        		.byte	80
 451 0053 00        		.byte	0
 452 0054 05        		.byte	5
 453 0055 03        		.byte	3
 454 0056 00        		.byte	0
 455 0057 00        		.byte	0
 456 0058 00        		.byte	0
 457 0059 1C        		.byte	28
 458 005a 22        		.byte	34
 459 005b 41        		.byte	65
 460 005c 00        		.byte	0
 461 005d 00        		.byte	0
 462 005e 41        		.byte	65
 463 005f 22        		.byte	34
 464 0060 1C        		.byte	28
 465 0061 00        		.byte	0
 466 0062 14        		.byte	20
 467 0063 08        		.byte	8
 468 0064 3E        		.byte	62
 469 0065 08        		.byte	8
 470 0066 14        		.byte	20
 471 0067 08        		.byte	8
 472 0068 08        		.byte	8
 473 0069 3E        		.byte	62
 474 006a 08        		.byte	8
 475 006b 08        		.byte	8
 476 006c 00        		.byte	0
 477 006d 50        		.byte	80
 478 006e 30        		.byte	48
 479 006f 00        		.byte	0
 480 0070 00        		.byte	0
 481 0071 08        		.byte	8
 482 0072 08        		.byte	8
 483 0073 08        		.byte	8
 484 0074 08        		.byte	8
 485 0075 08        		.byte	8
 486 0076 00        		.byte	0
 487 0077 60        		.byte	96
 488 0078 60        		.byte	96
 489 0079 00        		.byte	0
 490 007a 00        		.byte	0
 491 007b 20        		.byte	32
 492 007c 10        		.byte	16
 493 007d 08        		.byte	8
 494 007e 04        		.byte	4
 495 007f 02        		.byte	2
 496 0080 3E        		.byte	62
 497 0081 51        		.byte	81
 498 0082 49        		.byte	73
 499 0083 45        		.byte	69
 500 0084 3E        		.byte	62
 501 0085 00        		.byte	0
 502 0086 42        		.byte	66
 503 0087 7F        		.byte	127
 504 0088 40        		.byte	64
 505 0089 00        		.byte	0
 506 008a 42        		.byte	66
 507 008b 61        		.byte	97
 508 008c 51        		.byte	81
 509 008d 49        		.byte	73
 510 008e 46        		.byte	70
 511 008f 21        		.byte	33
 512 0090 41        		.byte	65
 513 0091 45        		.byte	69
 514 0092 4B        		.byte	75
 515 0093 31        		.byte	49
 516 0094 18        		.byte	24
 517 0095 14        		.byte	20
 518 0096 12        		.byte	18
 519 0097 7F        		.byte	127
 520 0098 10        		.byte	16
 521 0099 27        		.byte	39
 522 009a 45        		.byte	69
 523 009b 45        		.byte	69
 524 009c 45        		.byte	69
 525 009d 39        		.byte	57
 526 009e 3C        		.byte	60
 527 009f 4A        		.byte	74
 528 00a0 49        		.byte	73
 529 00a1 49        		.byte	73
 530 00a2 30        		.byte	48
 531 00a3 01        		.byte	1
 532 00a4 71        		.byte	113
 533 00a5 09        		.byte	9
 534 00a6 05        		.byte	5
 535 00a7 03        		.byte	3
 536 00a8 36        		.byte	54
 537 00a9 49        		.byte	73
 538 00aa 49        		.byte	73
 539 00ab 49        		.byte	73
 540 00ac 36        		.byte	54
 541 00ad 06        		.byte	6
 542 00ae 49        		.byte	73
 543 00af 49        		.byte	73
 544 00b0 29        		.byte	41
 545 00b1 1E        		.byte	30
 546 00b2 00        		.byte	0
 547 00b3 36        		.byte	54
 548 00b4 36        		.byte	54
 549 00b5 00        		.byte	0
 550 00b6 00        		.byte	0
 551 00b7 00        		.byte	0
 552 00b8 56        		.byte	86
 553 00b9 36        		.byte	54
 554 00ba 00        		.byte	0
 555 00bb 00        		.byte	0
 556 00bc 08        		.byte	8
 557 00bd 14        		.byte	20
 558 00be 22        		.byte	34
 559 00bf 41        		.byte	65
 560 00c0 00        		.byte	0
 561 00c1 14        		.byte	20
 562 00c2 14        		.byte	20
 563 00c3 14        		.byte	20
 564 00c4 14        		.byte	20
 565 00c5 14        		.byte	20
 566 00c6 00        		.byte	0
 567 00c7 41        		.byte	65
 568 00c8 22        		.byte	34
 569 00c9 14        		.byte	20
 570 00ca 08        		.byte	8
 571 00cb 02        		.byte	2
 572 00cc 01        		.byte	1
 573 00cd 51        		.byte	81
 574 00ce 09        		.byte	9
 575 00cf 06        		.byte	6
 576 00d0 32        		.byte	50
 577 00d1 49        		.byte	73
 578 00d2 79        		.byte	121
 579 00d3 41        		.byte	65
 580 00d4 3E        		.byte	62
 581 00d5 7E        		.byte	126
 582 00d6 11        		.byte	17
 583 00d7 11        		.byte	17
 584 00d8 11        		.byte	17
 585 00d9 7E        		.byte	126
 586 00da 7F        		.byte	127
 587 00db 49        		.byte	73
 588 00dc 49        		.byte	73
 589 00dd 49        		.byte	73
 590 00de 36        		.byte	54
 591 00df 3E        		.byte	62
 592 00e0 41        		.byte	65
 593 00e1 41        		.byte	65
 594 00e2 41        		.byte	65
 595 00e3 22        		.byte	34
 596 00e4 7F        		.byte	127
 597 00e5 41        		.byte	65
 598 00e6 41        		.byte	65
 599 00e7 22        		.byte	34
 600 00e8 1C        		.byte	28
 601 00e9 7F        		.byte	127
 602 00ea 49        		.byte	73
 603 00eb 49        		.byte	73
 604 00ec 49        		.byte	73
 605 00ed 41        		.byte	65
 606 00ee 7F        		.byte	127
 607 00ef 09        		.byte	9
 608 00f0 09        		.byte	9
 609 00f1 09        		.byte	9
 610 00f2 01        		.byte	1
 611 00f3 3E        		.byte	62
 612 00f4 41        		.byte	65
 613 00f5 49        		.byte	73
 614 00f6 49        		.byte	73
 615 00f7 7A        		.byte	122
 616 00f8 7F        		.byte	127
 617 00f9 08        		.byte	8
 618 00fa 08        		.byte	8
 619 00fb 08        		.byte	8
 620 00fc 7F        		.byte	127
 621 00fd 00        		.byte	0
 622 00fe 41        		.byte	65
 623 00ff 7F        		.byte	127
 624 0100 41        		.byte	65
 625 0101 00        		.byte	0
 626 0102 20        		.byte	32
 627 0103 40        		.byte	64
 628 0104 41        		.byte	65
 629 0105 3F        		.byte	63
 630 0106 01        		.byte	1
 631 0107 7F        		.byte	127
 632 0108 08        		.byte	8
 633 0109 14        		.byte	20
 634 010a 22        		.byte	34
 635 010b 41        		.byte	65
 636 010c 7F        		.byte	127
 637 010d 40        		.byte	64
 638 010e 40        		.byte	64
 639 010f 40        		.byte	64
 640 0110 40        		.byte	64
 641 0111 7F        		.byte	127
 642 0112 02        		.byte	2
 643 0113 0C        		.byte	12
 644 0114 02        		.byte	2
 645 0115 7F        		.byte	127
 646 0116 7F        		.byte	127
 647 0117 04        		.byte	4
 648 0118 08        		.byte	8
 649 0119 10        		.byte	16
 650 011a 7F        		.byte	127
 651 011b 3E        		.byte	62
 652 011c 41        		.byte	65
 653 011d 41        		.byte	65
 654 011e 41        		.byte	65
 655 011f 3E        		.byte	62
 656 0120 7F        		.byte	127
 657 0121 09        		.byte	9
 658 0122 09        		.byte	9
 659 0123 09        		.byte	9
 660 0124 06        		.byte	6
 661 0125 3E        		.byte	62
 662 0126 41        		.byte	65
 663 0127 51        		.byte	81
 664 0128 21        		.byte	33
 665 0129 5E        		.byte	94
 666 012a 7F        		.byte	127
 667 012b 09        		.byte	9
 668 012c 19        		.byte	25
 669 012d 29        		.byte	41
 670 012e 46        		.byte	70
 671 012f 46        		.byte	70
 672 0130 49        		.byte	73
 673 0131 49        		.byte	73
 674 0132 49        		.byte	73
 675 0133 31        		.byte	49
 676 0134 01        		.byte	1
 677 0135 01        		.byte	1
 678 0136 7F        		.byte	127
 679 0137 01        		.byte	1
 680 0138 01        		.byte	1
 681 0139 3F        		.byte	63
 682 013a 40        		.byte	64
 683 013b 40        		.byte	64
 684 013c 40        		.byte	64
 685 013d 3F        		.byte	63
 686 013e 1F        		.byte	31
 687 013f 20        		.byte	32
 688 0140 40        		.byte	64
 689 0141 20        		.byte	32
 690 0142 1F        		.byte	31
 691 0143 3F        		.byte	63
 692 0144 40        		.byte	64
 693 0145 38        		.byte	56
 694 0146 40        		.byte	64
 695 0147 3F        		.byte	63
 696 0148 63        		.byte	99
 697 0149 14        		.byte	20
 698 014a 08        		.byte	8
 699 014b 14        		.byte	20
 700 014c 63        		.byte	99
 701 014d 07        		.byte	7
 702 014e 08        		.byte	8
 703 014f 70        		.byte	112
 704 0150 08        		.byte	8
 705 0151 07        		.byte	7
 706 0152 61        		.byte	97
 707 0153 51        		.byte	81
 708 0154 49        		.byte	73
 709 0155 45        		.byte	69
 710 0156 43        		.byte	67
 711 0157 00        		.byte	0
 712 0158 7F        		.byte	127
 713 0159 41        		.byte	65
 714 015a 41        		.byte	65
 715 015b 00        		.byte	0
 716 015c 02        		.byte	2
 717 015d 04        		.byte	4
 718 015e 08        		.byte	8
 719 015f 10        		.byte	16
 720 0160 20        		.byte	32
 721 0161 00        		.byte	0
 722 0162 41        		.byte	65
 723 0163 41        		.byte	65
 724 0164 7F        		.byte	127
 725 0165 00        		.byte	0
 726 0166 04        		.byte	4
 727 0167 02        		.byte	2
 728 0168 01        		.byte	1
 729 0169 02        		.byte	2
 730 016a 04        		.byte	4
 731 016b 40        		.byte	64
 732 016c 40        		.byte	64
 733 016d 40        		.byte	64
 734 016e 40        		.byte	64
 735 016f 40        		.byte	64
 736 0170 00        		.byte	0
 737 0171 01        		.byte	1
 738 0172 02        		.byte	2
 739 0173 04        		.byte	4
 740 0174 00        		.byte	0
 741 0175 20        		.byte	32
 742 0176 54        		.byte	84
 743 0177 54        		.byte	84
 744 0178 54        		.byte	84
 745 0179 78        		.byte	120
 746 017a 7F        		.byte	127
 747 017b 48        		.byte	72
 748 017c 44        		.byte	68
 749 017d 44        		.byte	68
 750 017e 38        		.byte	56
 751 017f 38        		.byte	56
 752 0180 44        		.byte	68
 753 0181 44        		.byte	68
 754 0182 44        		.byte	68
 755 0183 20        		.byte	32
 756 0184 38        		.byte	56
 757 0185 44        		.byte	68
 758 0186 44        		.byte	68
 759 0187 48        		.byte	72
 760 0188 7F        		.byte	127
 761 0189 38        		.byte	56
 762 018a 54        		.byte	84
 763 018b 54        		.byte	84
 764 018c 54        		.byte	84
 765 018d 18        		.byte	24
 766 018e 08        		.byte	8
 767 018f 7E        		.byte	126
 768 0190 09        		.byte	9
 769 0191 01        		.byte	1
 770 0192 02        		.byte	2
 771 0193 0C        		.byte	12
 772 0194 52        		.byte	82
 773 0195 52        		.byte	82
 774 0196 52        		.byte	82
 775 0197 3E        		.byte	62
 776 0198 7F        		.byte	127
 777 0199 08        		.byte	8
 778 019a 04        		.byte	4
 779 019b 04        		.byte	4
 780 019c 78        		.byte	120
 781 019d 00        		.byte	0
 782 019e 44        		.byte	68
 783 019f 7D        		.byte	125
 784 01a0 40        		.byte	64
 785 01a1 00        		.byte	0
 786 01a2 20        		.byte	32
 787 01a3 40        		.byte	64
 788 01a4 44        		.byte	68
 789 01a5 3D        		.byte	61
 790 01a6 00        		.byte	0
 791 01a7 7F        		.byte	127
 792 01a8 10        		.byte	16
 793 01a9 28        		.byte	40
 794 01aa 44        		.byte	68
 795 01ab 00        		.byte	0
 796 01ac 00        		.byte	0
 797 01ad 41        		.byte	65
 798 01ae 7F        		.byte	127
 799 01af 40        		.byte	64
 800 01b0 00        		.byte	0
 801 01b1 7C        		.byte	124
 802 01b2 04        		.byte	4
 803 01b3 18        		.byte	24
 804 01b4 04        		.byte	4
 805 01b5 78        		.byte	120
 806 01b6 7C        		.byte	124
 807 01b7 08        		.byte	8
 808 01b8 04        		.byte	4
 809 01b9 04        		.byte	4
 810 01ba 78        		.byte	120
 811 01bb 38        		.byte	56
 812 01bc 44        		.byte	68
 813 01bd 44        		.byte	68
 814 01be 44        		.byte	68
 815 01bf 38        		.byte	56
 816 01c0 7C        		.byte	124
 817 01c1 14        		.byte	20
 818 01c2 14        		.byte	20
 819 01c3 14        		.byte	20
 820 01c4 08        		.byte	8
 821 01c5 08        		.byte	8
 822 01c6 14        		.byte	20
 823 01c7 14        		.byte	20
 824 01c8 18        		.byte	24
 825 01c9 7C        		.byte	124
 826 01ca 7C        		.byte	124
 827 01cb 08        		.byte	8
 828 01cc 04        		.byte	4
 829 01cd 04        		.byte	4
 830 01ce 08        		.byte	8
 831 01cf 48        		.byte	72
 832 01d0 54        		.byte	84
 833 01d1 54        		.byte	84
 834 01d2 54        		.byte	84
 835 01d3 20        		.byte	32
 836 01d4 04        		.byte	4
 837 01d5 3F        		.byte	63
 838 01d6 44        		.byte	68
 839 01d7 40        		.byte	64
 840 01d8 20        		.byte	32
 841 01d9 3C        		.byte	60
 842 01da 40        		.byte	64
 843 01db 40        		.byte	64
 844 01dc 20        		.byte	32
 845 01dd 7C        		.byte	124
 846 01de 1C        		.byte	28
 847 01df 20        		.byte	32
 848 01e0 40        		.byte	64
 849 01e1 20        		.byte	32
 850 01e2 1C        		.byte	28
 851 01e3 3C        		.byte	60
 852 01e4 40        		.byte	64
 853 01e5 30        		.byte	48
 854 01e6 40        		.byte	64
 855 01e7 3C        		.byte	60
 856 01e8 44        		.byte	68
 857 01e9 28        		.byte	40
 858 01ea 10        		.byte	16
 859 01eb 28        		.byte	40
 860 01ec 44        		.byte	68
 861 01ed 0C        		.byte	12
 862 01ee 50        		.byte	80
 863 01ef 50        		.byte	80
 864 01f0 50        		.byte	80
 865 01f1 3C        		.byte	60
 866 01f2 44        		.byte	68
 867 01f3 64        		.byte	100
 868 01f4 54        		.byte	84
 869 01f5 4C        		.byte	76
 870 01f6 44        		.byte	68
 871               		.text
 872               	.Letext0:
 873               		.file 2 "/usr/local/CrossPack-AVR-20130212/lib/gcc/avr/4.6.2/../../../../avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 font.c
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:2      *ABS*:0000003f __SREG__
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:3      *ABS*:0000003e __SP_H__
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:4      *ABS*:0000003d __SP_L__
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:5      *ABS*:00000034 __CCP__
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:6      *ABS*:00000000 __tmp_reg__
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:7      *ABS*:00000001 __zero_reg__
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:15     .text:00000000 font_getpath
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:314    .progmem.data:00000000 paths
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:80     .text:0000002e font_getchar
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:415    .eeprom:00000030 font
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:170    .text:00000086 font_getbitmap
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:363    .eeprom:00000000 bitmaps
/var/folders/_t/3n28601j4f36k4h8t71c5mvr0000gn/T//ccl4nm2F.s:251    .text:000000d2 font_getbitmappixel

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__eerd_byte_m32
